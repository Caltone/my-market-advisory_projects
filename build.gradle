
buildscript {
    repositories {
        jcenter()    // Bintray's repository - a fast Maven Central mirror & more
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.2'
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:2.2.0' // If a newer version is available, use it
    }
}

plugins {
    id 'java'
}

apply plugin: 'java'
apply plugin: 'war'                               // standard Web Archive plugin
apply plugin: 'com.google.cloud.tools.appengine'  // App Engine tasks

version = '0.1.1-SNAPSHOT'

ext {
    springFrameworkVersion = '5.3.3.RELEASE'
    jacksonVersion = '2.0.2'
    testNgVersion = '7.0.0'
    junitPlatformVersion = '1.7.1'
}

allprojects {
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()

    }
}

subprojects {
    version = '0.2.0-SNAPSHOT'
}


configure(subprojects.findAll { it.name == 'my-market-advisory' || 'market-recommender' }) {
    repositories {
        mavenCentral()
        jcenter()

        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://repo.spring.io/libs-milestone' }
        maven { url 'https://repo.spring.io/snapshot' }
    }

    apply plugin: 'java'

    java {
        sourceCompatibility = 'VERSION_11'
        targetCompatibility = 'VERSION_11'
    }

    sourceSets {
        integrationTest {
            java {
                compileClasspath += sourceSets.main.output
                runtimeClasspath += sourceSets.main.output
                srcDir file('src/integration-test/java')
            }
            resources.srcDir file('src/integration-test/resources')
        }
    }
    configurations {
        integrationTestImplementation.extendsFrom(testImplementation)
        integrationTestRuntimeOnly.extendsFrom(runtimeOnly)
    }

    dependencies {
        compile 'com.google.appengine:appengine-api-1.0-sdk:+'  // Latest App Engine Api's

        testImplementation "org.testng:testng:$testNgVersion"
        testImplementation "org.springframework.boot:spring-boot-starter-test"

        testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.5.2")
        testRuntimeOnly("org.junit.platform:junit-platform-runner:1.5.2")
        testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
    }

    task integrationTest(type: Test) {
        description = 'Runs integration tests.'
        group = 'verification'

        testClassesDirs = sourceSets.integrationTest.output.classesDirs
        classpath = sourceSets.integrationTest.runtimeClasspath
        useTestNG()
        shouldRunAfter test
    }

    check.dependsOn integrationTest
// Always run unit tests
    appengineDeploy.dependsOn test
    appengineStage.dependsOn test

    reporting.baseDir = "my-reports"
    testResultsDirName = "$buildDir/my-test-results"

    appengine {  // App Engine tasks configuration
        deploy {   // deploy configuration
            projectId = System.getenv('GOOGLE_CLOUD_PROJECT')
            version = '1'
        }
    }

    test {
        useTestNG()
    }
}