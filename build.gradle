
buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.4.5"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.2'
    }
}

plugins {
    id 'java'
}

apply plugin: 'java'

version = '0.1.2-SNAPSHOT'

ext {
    springFrameworkVersion = '5.1.5.RELEASE'
    jacksonVersion = '2.12.0'
    testNgVersion = '7.0.0'
    junitPlatformVersion = '1.7.1'
}
subprojects {
    version = '0.2.0-SNAPSHOT'
}

configure(subprojects.findAll { it.name == 'my-market-advisory' || 'market-recommender' }) {
    repositories {
        jcenter()
        mavenCentral()
    }

    apply plugin: 'java'

    java {
        sourceCompatibility = 'VERSION_11'
        targetCompatibility = 'VERSION_11'
    }

    sourceSets {
        integrationTest {
            java {
                compileClasspath += sourceSets.main.output
                runtimeClasspath += sourceSets.main.output
                srcDir file('src/integration-test/java')
            }
            resources.srcDir file('src/integration-test/resources')
        }
    }
    configurations {
        integrationTestImplementation.extendsFrom(testImplementation)
        integrationTestRuntimeOnly.extendsFrom(runtimeOnly)
    }

    dependencies {
        implementation platform('org.springframework.boot:spring-boot-dependencies:2.4.5')
        implementation group: 'io.spring.platform', name: 'platform-bom', version: 'Cairo-SR8', ext: 'pom'
        
        // https://mvnrepository.com/artifact/com.google.appengine/gradle-appengine-plugin
        implementation 'com.google.appengine:gradle-appengine-plugin:1.9.59'


        testImplementation "org.testng:testng:$testNgVersion"
        testImplementation "org.springframework.boot:spring-boot-starter-test"

        testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.5.2")
        testRuntimeOnly("org.junit.platform:junit-platform-runner:1.5.2")
        testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
    }

    task integrationTest(type: Test) {
        description = 'Runs integration tests.'
        group = 'verification'

        testClassesDirs = sourceSets.integrationTest.output.classesDirs
        classpath = sourceSets.integrationTest.runtimeClasspath
        useTestNG()
        shouldRunAfter test
    }
    check.dependsOn(integrationTest)

    reporting.baseDir = "my-reports"
    testResultsDirName = "$buildDir/my-test-results"

    test {
        useTestNG()
    }
}